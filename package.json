{
  "name": "gicomai",
  "displayName": "gicomai",
  "description": "GIT commit messages based on ChatGPT AI",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gicomai.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "gicomai.openEditor",
        "title": "Open commit message editor",
        "category": "Git",
        "icon": "$(edit)"
      }    
    ],
    "menus": {
      "scm/title": [
        {
          "command": "gicomai.openEditor",
          "group": "navigation@1",
          "title": "Edit",
          "when": "scmProvider == git"
        },
        {
          "command": "gicomai.openEditor",
          "group": "inline",
          "title": "Edit",
          "when": "scmProvider == git"
        }
      ]
    },
    "configuration": {
      "title": "Gicomai",
      "properties": {
        "gicomai.confirmAmend": {
          "type": "boolean",
          "description": "Confirm amend commit",
          "default": true
        },
        "gicomai.dynamicTemplate": {
          "type": "array",
          "description": "Template for the form view. You can refer to tokens in {token_name} format.",
          "items": {
            "type": "string"
          },
          "default": [
            "{type}{scope}: {description}",
            "",
            "{body}",
            "",
            "{breaking_change}{footer}"
          ]
        },
        "gicomai.staticTemplate": {
          "type": "array",
          "description": "Template for the text view.",
          "items": {
            "type": "string"
          },
          "default": [
            "feat: Short description",
            "",
            "Message body",
            "",
            "Message footer"
          ]
        },
        "gicomai.tokens": {
          "type": "array",
          "description": "Editable inputs in the form view",
          "default": [
            {
              "label": "Type",
              "name": "type",
              "type": "enum",
              "options": [
                {
                  "label": "---",
                  "value": ""
                },
                {
                  "label": "build",
                  "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
                },
                {
                  "label": "chore",
                  "description": "Updating grunt tasks etc; no production code change"
                },
                {
                  "label": "ci",
                  "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
                },
                {
                  "label": "docs",
                  "description": "Documentation only changes"
                },
                {
                  "label": "feat",
                  "description": "A new feature"
                },
                {
                  "label": "fix",
                  "description": "A bug fix"
                },
                {
                  "label": "perf",
                  "description": "A code change that improves performance"
                },
                {
                  "label": "refactor",
                  "description": "A code change that neither fixes a bug nor adds a feature"
                },
                {
                  "label": "revert"
                },
                {
                  "label": "style",
                  "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
                },
                {
                  "label": "test",
                  "description": "Adding missing tests or correcting existing tests"
                }
              ],
              "description": "Type of changes"
            },
            {
              "label": "Scope",
              "name": "scope",
              "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
              "type": "text",
              "multiline": false,
              "prefix": "(",
              "suffix": ")"
            },
            {
              "label": "Short description",
              "name": "description",
              "description": "Short description in the subject line.",
              "type": "text",
              "multiline": false
            },
            {
              "label": "Body",
              "name": "body",
              "description": "Optional body",
              "type": "text",
              "multiline": true,
              "lines": 5,
              "maxLines": 10
            },
            {
              "label": "Breaking change",
              "name": "breaking_change",
              "type": "boolean",
              "value": "BREAKING CHANGE: ",
              "default": false
            },
            {
              "label": "Footer",
              "name": "footer",
              "description": "Optional footer",
              "type": "text",
              "multiline": true
            }
          ]
        },
        "gicomai.view.defaultView": {
          "type": "string",
          "default": "text",
          "enum": [
            "text",
            "form"
          ]
        },
        "gicomai.view.visibleViews": {
          "type": "string",
          "default": "both",
          "enum": [
            "text",
            "form",
            "both"
          ]
        },
        "gicomai.view.fullWidth": {
          "type": "boolean",
          "description": "The editor fills the whole available space.",
          "default": false
        },
        "gicomai.view.useMonospaceEditor": {
          "type": "boolean",
          "description": "Use monospace font in the text view",
          "default": false
        },
        "gicomai.view.tabSize": {
          "type": "number",
          "description": "Tab size in the monospace editor",
          "default": 4
        },
        "gicomai.view.useTabs": {
          "type": "boolean",
          "description": "Use tabs for indentation in the monospace editor",
          "default": false
        },
        "gicomai.view.rulers": {
          "type": "array",
          "description": "Render vertical rulers after a certain number of monospace characters in the monospace editor. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
          "default": [
            50,
            72
          ]
        },
        "gicomai.view.visibleLines": {
          "type": "number",
          "description": "Visible lines in the text view",
          "default": 10
        },
        "gicomai.view.showRecentCommits": {
          "type": "boolean",
          "description": "Show recent commits in the main view.",
          "default": true
        },
        "gicomai.view.saveAndClose": {
          "type": "boolean",
          "description": "Close commit message editor tab after saving",
          "default": false
        }
      }
    }  
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.73.0",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.3",
    "@vscode/test-electron": "^2.2.0"
  }
}
